import scipy as sp
import numpy as np
import matplotlib.pyplot as plt
from itertools import groupby
import pandas as pd
#%%
#numbers given
x = sp.loadtxt(r"C:\Users\Yi Gan\Documents\Y1 Project\NumberFit_148.txt") #make sure to change location on different computers
print(x)
#%%
grid = [[1,0,1,0,1,0,1,0,1,0,1,0,1],
        [0,0,0,0,0,0,1,0,0,0,0,0,0],
        [1,0,1,0,1,0,0,0,1,0,1,0,1],
        [0,0,0,0,0,0,1,0,0,0,0,0,0],
        [1,0,1,1,1,0,1,0,1,0,1,0,1],
        [0,0,0,0,0,0,0,1,0,0,0,0,0],
        [1,1,1,0,1,0,1,0,1,0,1,1,1],
        [0,0,0,0,0,1,0,0,0,0,0,0,0],
        [1,0,1,0,1,0,1,0,1,1,1,0,1],
        [0,0,0,0,0,0,1,0,0,0,0,0,0],
        [1,0,1,0,1,0,0,0,1,0,1,0,1],
        [0,0,0,0,0,0,1,0,0,0,0,0,0],
        [1,0,1,0,1,0,1,0,1,0,1,0,1]]

print(grid)

grid = np.array(grid)
print(grid)
print(type(grid))
print(grid[1])
print(grid)
#print(grid[:,0])
df = pd.DataFrame(data = grid) #transpose grid, to read columns later on
dgrid = df.T
print(dgrid) #print transposed grid
#%%
#creating empty list to store output
array = np.arange(13)
print(array)
myoutput = []
for i in (array):
    myinput = grid[i]
    for k,g in groupby(myinput):
        myoutput.append('line')
        myoutput.append((len(list(g)),int(k)))
print (myinput)
print(*myoutput)
#%%
#initial code (only reads the first line)
array = np.arange(13)
print(array)
for i in (array):
    myinput = grid[i]
print (myinput)
#%%
#creating empty list to store output
from itertools import groupby

myoutput = []

for k,g in groupby(myinput):

    myoutput.append((len(list(g)),int(k)))

print(*myoutput)
#%%
downarray = np.array(dgrid)
print(downarray)
print(type(downarray))
print(downarray[1])
print(downarray[:,0])
#%%
#counts 0s and 1s in columns
darray = []
for j in (array):
    dinput = downarray[j]
    darray.append([j])
    for m,n in groupby(dinput):
        darray.append((len(list(n)),int(m)))
print(dinput)
print(*darray)
#%%
print(len(x))
for l in (xarray):
    xstr = str(x[l]) #counts number of digits in each number
    xact = len(xstr) - 2 #Include -2 if xstr has .0 on the end of each number
    print(xstr)
    print(xact)
#%%
def split(xstr):
    return list(xstr)
myoutput = []
print(len(x)) #to check number of elements in document
across = []
across_n = []
down = []
down_n = []
for l in (xarray):
    xint = int(x[l]) #convert to integer
    xstr = str(xint) #converts integer to string so that it can be counted
    xact = len(xstr) #Counts number of digits in each number
    print(xstr)
    #print(xact)
    #check if there is space in each row for the number (in for loop, so will check each number for each row indiviually)
    for i in (array):
        myinput = grid[i] 
        #print(myinput)
        #myoutput.append([i])
        for k,g in groupby(myinput):
            num = len(list(g)) #number of 0s or 1s in a group
            myoutput.append((len(list(g)),int(k))) #counts numbers of 1s and 0s
            if int(k) == 0: #singles out spaces. 0 signifies a space
                klist = []
                if num == xact:
                    #print('indeed') #if the number of 0s is equal to the number of digits in the number
                    print(myinput)
                    nlist = split(xstr) #split the digits in each number into a list
                    #print(nlist)
                    koththamalli = np.arange(xact) 
                    #klist.append(xstr)
                    #klist = []
                    #bottom bit commented out as it does not quite work
                    #for a in (koththamalli):
                    for b in (array):
                        element = myinput[b]
                        if element == 0:
                            #klist.append([i])
                            klist.append(xstr) #appends whole number
                        else:
                            klist.append('-')
                    #print(klist)
                    across.append(xstr)
                    across_n.append([i])
                    print(across)
                    print(across_n)
                    
        #print (myinput)
    #print(*myoutput)
#%%
